@model RWA.Models.Business_domain.ItemBundle
@using RWA.Models.Business_domain
@{
    ViewBag.Title = "Item";
    List<Category> cat = ViewBag.c as List<Category>;
    List<SubCategory> sub = ViewBag.s as List<SubCategory>;
    List<SubCategory> dinamicSub = ViewBag.din as List<SubCategory>;

}

<div class="col-12 jumboton">
    <h2>Ažuriranje proizvoda</h2>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3><span class="badge bg-success">@Model.NazivProizvoda</span></h3>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.IDStavka)
        @Html.HiddenFor(model => model.RacunID)
        @Html.HiddenFor(model => model.IDProizvod)
        @Html.HiddenFor(model => model.IDPotkategorija)
        @Html.HiddenFor(model => model.IDKategorija)
        @Html.HiddenFor(model => model.IDKomercijalist)
        @Html.HiddenFor(model => model.IDKreditnaKartica)

        <div class="form-group-holder">
            <div class="form-group">
                <label class="control-label">Naziv proizvoda</label>
                <div>
                    @Html.EditorFor(model => model.NazivProizvoda, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NazivProizvoda, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label">Broj proizvoda</label>
                <div>
                    @Html.EditorFor(model => model.BrojProizvoda, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BrojProizvoda, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label">Boja</label>
                <div>
                    @Html.EditorFor(model => model.Boja, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Boja, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label">Minimalna količina na skladištu</label>
                <div>
                    @Html.EditorFor(model => model.MinimalnaKolicinaNaSkladistu, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MinimalnaKolicinaNaSkladistu, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label">Cijena bez PDV-a</label>
                <div>
                    @Html.EditorFor(model => model.CijenaBezPDV, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CijenaBezPDV, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label">Kategorija</label>
                <div>
                    @Html.DropDownList(
                    name: "ddlCategories",
                    selectList: new SelectList(
                        items: cat,
                        dataTextField: "Naziv",
                        dataValueField: "IDKategorija",
                        selectedValue: Model.IDKategorija),
                    htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NazivKategorije, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label">Potkategorija</label>
                <div>
                    @Html.DropDownList(
                    name: "ddlSubcategories",
                    selectList: new SelectList(
                        items: sub,
                        dataTextField: "Naziv",
                        dataValueField: "IDPotkategorija",
                        selectedValue: Model.IDPotkategorija),
                    htmlAttributes: new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.NazivPotkategorije, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div>
                    <input type="submit" value="Ažuriraj" class="btn btn-primary" @*onclick="location.href='@Url.Action("Item", "ReceiptDetails")'"*@ />

                    @Html.ActionLink(
                    linkText: "Povratak",
                    actionName: "Details",
                    controllerName: "ReceiptDetails",
                    routeValues: new { racunID = Model.RacunID },
                    htmlAttributes: new { @class = "btn btn-primary" })
                </div>
            </div>

        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function ()
        {
            $("#ddlCategories").change(function ()
            {
                var id = $("#ddlCategories").val();
                $.get('@Url.Action(actionName: "DinamicSubCategories", controllerName: "ReceiptDetails")', { id: id }, function (data)
                {
                    $("#ddlSubcategories").empty();

                    $.each(data, function (index, item)
                    {
                        $("#ddlSubcategories").append("<option value='" + item.ddlSubcategories + "'>" + item.Naziv + "</option>")
                    });
                });
            })
        });
    </script>
}
